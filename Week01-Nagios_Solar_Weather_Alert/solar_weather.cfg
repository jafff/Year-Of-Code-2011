#!/usr/bin/python

import argparse
import urllib2

XRAY = [ 217, 198, 287, 261, 245 ]
GEOMAG = [ 975, 215, 999 ]

parser = argparse.ArgumentParser(description='Check the current Solar Weather (http://www.n3kl.org/) for Solar X-rays and Geomagnetic Field status.')
parser.add_argument( 'warning', metavar='<warn xray>,<warn geomag>', help='Comma seperated warning levels for X-rays (0=Normal, 1=Active, 2=M Class Flare, 3=X Class Flare, 4=Mega Flare) and Geomagnetic Status (0=Quiet, 1=Unsettled, 2=Storm)', action='store' )
parser.add_argument( 'critical', metavar='<crit xray>,<crit geomag>', help='Comma seperated critical levels for X-rays (0=Normal, 1=Active, 2=M Class Flare, 3=X Class Flare, 4=Mega Flare) and Geomagnetic Status (0=Quiet, 1=Unsettled, 2=Storm)', action='store' )

args = parser.parse_args()

warning = args.warning.split(',');
critical = args.critical.split(',');

flare_handle = urllib2.urlopen ( 'http://www.n3kl.org/sun/images/status.gif?', None, 5 )
flare_size = flare_handle.headers['Content-Length']
geomag_handle = urllib2.urlopen ( 'http://www.n3kl.org/sun/images/kpstatus.gif?', None, 5 )
geomag_size = xray_handle.headers['Content-Length']

flare_handle.close()
geomag_handle.close()

xray_state = -1
geomag_state = -1

for x in XRAY
	if XRAY[x] == xray_size
		xray_state = x
		break

for f in GEOMAG
	if GEOMAG[f] == geomag_size
		geomag_state = f
		break

if critical[0] <= xray_state:

if critical[1] <= geomag_state:

if warning[0] <= xray_state:

if warning[1] <= geomag_state:
